random.randint
  random.randint(1,10)  
  语句的含义是产生1至10（包含1与10）的一个随机数（整数int型）。（参数为整数不可为浮点数否则会报错）

random.random
  random.random()  
  生成一个0到1之间的随机浮点数，包括0但不包括1，也就是[0.0, 1.0)。

random.uniform
  random.uniform(a, b)  
  生成a、b之间的随机浮点数。不过与randint不同的是，a、b可以不是整数，也不用考虑大小。即
  random.uniform(3.65,10.56） 
  random.uniform(10.56, 3.65）

random.choice
  random.choice(seq)  
  从序列中随机选取一个元素。seq需要是一个序列，比如list、元组、字符串。
  random.choice([1, 2, 3, 5, 8, 13]) #list  
	random.choice('hello') #字符串  
	random.choice(['hello', 'world']) #字符串组成的list  
  random.choice((1, 2, 3)) #元组  
  都是可行的用法。

random.randrange
  random.randrange(start, stop, step)  
  生成一个从start到stop（不包括stop），间隔为step的一个随机整数。start、stop、step都要为整数，且start<stop。

random.sample
  random.sample(p, k)  
  从p序列中，随机获取k个元素，生成一个新序列。sample不改变原来序列。
  这个模块很 666，还支持三角、β分布、指数分布、伽马分布、高斯分布等等非常专业的随机算法。

random.shuffle
  random.shuffle(x)  
  把序列x中的元素顺序打乱。shuffle直接改变原有的序列。如：
  a=[1,2,3,4,5,6]  
  random.shuffle(a)  
  print(a)  
  结果如下：
  [5, 1, 3, 6, 4, 2]  
  新手在使用此函数时可能会出现一些错误，如下：
  import random  
  a=[1,2,3,4,5,6]  
  print(random.shuffle(a))  
  使用此方法会出现None结果，原因是random.shuffle() 是用来打乱列表元素的，没有返回值，所以不能用print(random.shuffle(a))来输出打印打乱后的序列
